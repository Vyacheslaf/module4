plugins {
//    id 'war'
    id 'java'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '2.7.13'
    id "io.freefair.lombok" version "8.0.1"
    id 'jacoco'
    id 'org.sonarqube' version '4.2.1.3168'
}
/*
bootWar {
    archiveFileName = 'rest-api-module2.war'
}*/

tasks.named('jar') {
    manifest {
        attributes(
                'Main-Class': 'com.epam.esm.Application'
        )
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

group = 'com.epam.esm'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-hateoas')
    implementation('org.springframework.boot:spring-boot-starter-validation')
// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
    implementation 'com.mysql:mysql-connector-j:8.0.33'
// https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation 'org.postgresql:postgresql:42.6.0'
// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    def jjwtVersion = '0.11.5'
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"

//    def hibernateVersion = '6.2.4.Final'
// https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-envers
//    implementation "org.hibernate.orm:hibernate-envers:$hibernateVersion"
// https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-jpamodelgen
//    compileOnly "org.hibernate.orm:hibernate-jpamodelgen:$hibernateVersion"

    def hibernateVersion = '5.6.15.Final'
// https://mvnrepository.com/artifact/org.hibernate/hibernate-envers
    implementation "org.hibernate:hibernate-envers:$hibernateVersion"
// https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-jpamodelgen
    compileOnly "org.hibernate:hibernate-jpamodelgen:$hibernateVersion"

    def mapStructVersion = '1.5.5.Final'
// https://mvnrepository.com/artifact/org.mapstruct/mapstruct
    implementation "org.mapstruct:mapstruct:$mapStructVersion"

    annotationProcessor("org.mapstruct:mapstruct-processor:$mapStructVersion")
    annotationProcessor("org.hibernate:hibernate-jpamodelgen:$hibernateVersion")

    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
// https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation 'org.mockito:mockito-core:5.4.0'

// https://mvnrepository.com/artifact/org.testcontainers/testcontainers
    testImplementation 'org.testcontainers:testcontainers:1.18.3'
// https://mvnrepository.com/artifact/org.testcontainers/postgresql
    testImplementation 'org.testcontainers:postgresql:1.18.3'
// https://mvnrepository.com/artifact/org.testcontainers/junit-jupiter
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'
}

test {
    useJUnitPlatform()
//    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    dependsOn test
}

tasks.named('sonar').configure {
    dependsOn jacocoTestReport
}

java {
    sourceCompatibility = '1.8'
    targetCompatibility = 1.8
}